<?php
/**
 * Created by PhpStorm.
 * User: zhangkaifeng
 * Date: 2017/5/31
 * Time: 09:31
 * 建筑物管理大B端管理
 */

namespace BuildManagement\Controller;


use MerAdmin\Controller\AuthController;

class BuildidManagementAdminController extends AuthController
{
    protected $lbs_key = 'vUbk87ZHpF';
    protected $obj;
    protected $merchant;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->merchant = $this->getMerchant($this->ukey);
        $this->obj = M('total_buildid');
    }


    /**
     * 建筑物列表
     */
    public function buildList()
    {
        $result = $this->obj->where(array('adminid' => $this->merchant['id'], 'is_del' => 2))->select();

        if (is_array($result)) {
            foreach ($result as $k=>$v) {
                if (empty($v['city'])) {
                    $details = $this->buildDetails($v['buildid']);

                    if (is_array($details)) {
                        $data['name'] = $result[$k]['name'] = $details['name_chn'];
                        $data['buildid'] = $result[$k]['buildid'] = $details['buildid'];
                        $data['long'] = $result[$k]['long'] = $details['long'];
                        $data['lat'] = $result[$k]['lat'] = $details['lat'];
                        $data['country'] = $result[$k]['country'] = $details['country'];
                        $data['province'] = $result[$k]['province'] = $details['province'];
                        $data['city'] = $result[$k]['city'] = $details['city'];
                        $data['district'] = $result[$k]['district'] = $details['district'];
                        $data['url'] = $result[$k]['url'] = $details['url'];
                        $data['address'] = $result[$k]['address'] = $details['address'];
                        $this->updateBuildInfo($data);
                    }
                }
            }
        } else {
            $result = array();
        }

        $data = array('code' => 200, 'msg' => 'success', 'data' => $result);
        returnjson($data,$this->returnstyle,$this->callback);
    }


    /**
     * 请求LBS接口来获得建筑物详细信息
     * @param $build_id
     * @return mixed
     */
    protected function buildDetails($build_id)
    {
        $data['key'] = $this->lbs_key;
        $data['buildid'] = $build_id;

        $url = 'http://lbsapi.rtmap.com/rtmap_lbs_api/v1/rtmap/build_detail';

        $string = json_encode($data);
        $re = $this->curl_json($url, $string);
        $re_arr = json_decode($re, true);
        return $re_arr['build_detail'];
    }

    /**
     * 将LBS拉取过来的建筑物信息更新到本地表中
     * @param array $data
     */
    protected function updateBuildInfo(array $data) {
        $this->obj->where(array('buildid' => $data['buildid'], 'adminid' => $this->merchant['id']))->save($data);
    }

    /**
     * curl请求
     * POST数据为JSON数据
     * @param $url
     * @param $data_string
     * @return mixed
     */
    protected function curl_json($url, $data_string) {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $data_string);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/json',
                'Content-Length: ' . strlen($data_string))
        );
        $curl_re = curl_exec($ch);
        curl_close($ch);

        return $curl_re;
    }



}