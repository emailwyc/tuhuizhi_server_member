<?php
/**
 * Created by PhpStorm.
 * User: zhangkaifeng
 * Date: 15/08/2017
 * Time: 14:30
 */

namespace House\Controller;


use common\ServiceLocator;
use House\Service\HotelService;

class HotelController extends AuthController
{

//    public function _initialize()
//    {
//        parent::__initialize(); // TODO: Change the autogenerated stub
//    }

    /**
     * 客房列表
     */
    public function roomlist()
    {
        $params['issale'] = 1;//只查询上架客房信息
        $params['name'] = I('name');
        $params['priceorder'] = I('priceorder');
        $params['page'] = I('page')? : 1;
        $params['lines']= I('lines')? : 1;
        $admininfo = $this->getMerchant($this->ukey);
        $service = ServiceLocator::getHotelService($admininfo);
        $data = $service->roomsList($params, $params['page'], $params['lines']);
        if ($data){
            returnjson(array('code'=>200, 'data'=>$data), $this->returnstyle,$this->callback);
        }else{
            returnjson(array('code'=>102), $this->returnstyle,$this->callback);
        }
    }

    /**
     * 获取一个房间信息
     */
    public function getoneroom()
    {
        $params['id'] = I('id');
        if (in_array('', $params)){
            returnjson(array('code'=>1030), $this->returnstyle,$this->callback);
        }
        $admininfo = $this->getMerchant($this->ukey);
        $service = ServiceLocator::getHotelService($admininfo);
        $data = $service->onceRoom($params['id'], $admininfo);
        if ($data){
            returnjson(array('code'=>200, 'data'=>$data), $this->returnstyle,$this->callback);
        }else{
            returnjson(array('code'=>104), $this->returnstyle,$this->callback);
        }
    }


    /**
     * 客房预订下单
     */
    public function hotelroomorder()
    {
        $params['startdate'] = I('stamptimestamp');
        $params['enddate'] = I('endtimestamp');
        $params['roomid'] = I('room');
        $params['roomnum'] = I('roomnum');
        $params['person'] = I('person');
        $params['mobile'] = I('mobile');
        $params['estimatedtime'] = I('estimatedtimestamp');//预计到店时间

        if (in_array('', $params)) {
            returnjson(array('code'=>1030), $this->returnstyle,$this->callback);
        }

        //判断参数准确性
        $start = date('Y-m-d', $params['startdate']);
        $end = date('Y-m-d', $params['enddate']);
        $estimatedtime = date('Y-m-d', $params['estimatedtime']);
        $date = date('Y-m-d');
        if (!$start || !$end || ($start < $date) || ($end < $start) || ($estimatedtime < $date || $estimatedtime < $start)) {
            returnjson(array('code'=>1051), $this->returnstyle,$this->callback);
        }
        $admininfo = $this->getMerchant($this->ukey);
        $params['adminid'] = $admininfo['id'];
        $params['userid'] = $this->userInfo['id'];
        //计算天数
        $params['dates'] = ($params['enddate'] - $params['startdate']) / 86400;
        $params['ordertime'] = time();

        foreach ($params['person'] as $item){
            $params['persons'][] = array(
                'adminid'=>$admininfo['id'],
                'personname'=>$item
            );
        }
        unset($params['person']);
        $data = HotelService::addOrder($params);
        if ($data){
            returnjson(array('code'=>200), $this->returnstyle,$this->callback);
        }else{
            returnjson(array('code'=>104), $this->returnstyle,$this->callback);
        }







    }


    /**
     * 按条件获取订单列表
     */
    public function orderlist()
    {
//        $params['startdate'] = (int)I('startdate');
//        $params['enddate'] = (int)I('enddate');
        $params['status'] = I('status') ? : 0;//0未回访，1已回访
        $params['userucid'] = $this->userucid;
//        $params['issuccess'] = I('issuccess');
//        $params['name'] = I('name');
        if (in_array('', $params, true)) {
            returnjson(array('code'=>1030), $this->returnstyle,$this->callback);
        }
        $page = I('page') ? : 1;
        $lines = I('lines') ? : 1;
        $admininfo = $this->getMerchant($this->ukey);
        $data = Hotelservice::orderList($params, $page, $lines, $admininfo);
        if ($data){
            returnjson(array('code'=>200, 'data'=>$data), $this->returnstyle,$this->callback);
        }else{
            returnjson(array('code'=>102), $this->returnstyle,$this->callback);
        }
    }


    /**
     * 获取订单详情
     */
    public function orderinfo()
    {
//        $params['id'] = I('id');
//        if (in_array('', $params)) {
//            returnjson(array('code'=>1030), $this->returnstyle,$this->callback);
//        }
//        $admininfo = $this->getMerchant($this->ukey);
//        $data = \MerAdmin\Service\HotelService::orderInfo($admininfo, $params);
//        if ($data){
//            returnjson(array('code'=>200, 'data'=>$data), $this->returnstyle,$this->callback);
//        }else{
//            returnjson(array('code'=>104), $this->returnstyle,$this->callback);
//        }


        $params['id'] = I('id');
        $params['userucid'] = $this->userucid;
        if (in_array('', $params, true)) {
            returnjson(array('code'=>1030), $this->returnstyle,$this->callback);
        }
        $admininfo = $this->getMerchant($this->ukey);
        $data = \MerAdmin\Service\HotelService::orderInfo($admininfo, $params);
        if ($data){
            returnjson(array('code'=>200, 'data'=>$data), $this->returnstyle,$this->callback);
        }else{
            returnjson(array('code'=>104), $this->returnstyle,$this->callback);
        }
    }

    /**
     * 获取业主所有房屋列表
     */
    public function getHouseList()
    {
        $params = $this->params;
        $db = M( 'key_admin_table' , '', 'DB_CONFIG2');
        $merTabInfo = $db->where(array("key_admin"=>$this->ukey))->find();
        if(!$merTabInfo){
            returnjson(array("code"=>1082,"msg"=>"未找到该商户"), $this->returnstyle,$this->callback);
        }
        if($this->userInfo['role_type'] !=2){
            returnjson(array("code"=>1082,"msg"=>"您的身份不符合查询标准！"), $this->returnstyle,$this->callback);
        }
        if(empty($this->userInfo['buildInfo'])){
            returnjson(array("code"=>1082,"msg"=>"该业主名下未找到信息！"), $this->returnstyle,$this->callback);
        }
        $rKey = "house:getHouseList:".$this->ukey.":".$this->userInfo['id'];
        $rInfo= $this->redis->get($rKey);
        if(!$rInfo) {
            $houseArrList = array();
            foreach ($this->userInfo['buildInfo'] as $v) {
                $db1 = M($merTabInfo['prefix'] . '_map_poi_' . $v['build_id'], '', 'DB_CONFIG2');
                $where = array("id_build" => $v['build_id'], 'floor' => $v['floor'], 'poi_no' => $v['poi_no']);
                $sel = $db1->field('poi_name')->where($where)->find();
                $v['poi_number'] = !empty($sel['poi_number']) ? $sel['poi_number'] : "";
                $v['poi_name'] = !empty($sel['poi_name']) ? $sel['poi_name'] : "";
                $v['build_name'] = !empty($v['build_name']) ? $v['build_name'] : "";
                $houseArrList[] = $v;
            }
            $this->redis->set($rKey,json_encode($houseArrList),1800);
        }else{
            $houseArrList = json_decode($rInfo,true);
        }
        unset($this->userInfo['buildInfo']);
        $user = $this->userInfo;
        returnjson(array("code"=>200,"data"=>$houseArrList,'user'=>$user), $this->returnstyle,$this->callback);
    }








}