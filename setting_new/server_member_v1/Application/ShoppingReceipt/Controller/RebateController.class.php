<?php
/**
 * Created by PhpStorm.
 * User: zhang
 * Date: 17/11/2017
 * Time: 17:42
 */

namespace ShoppingReceipt\Controller;


use Common\Controller\CommonController;
use ShoppingReceipt\Service\RebateService;

class RebateController extends CommonController
{
    public function _initialize()
    {
        parent::__initialize(); // TODO: Change the autogenerated stub
    }
    /**
     * 扫码小票
     */
    public function scanreceipt()
    {
        $params['key_admin'] = I('key_admin');
        $params['code'] = I('code');
        $params['openid'] = I('openid');
        if (in_array('', $params)) {//基础信息必有
            returnjson(array('code'=>1030),$this->returnstyle,$this->callback);
        }
        //如果有其他字段信息，则在下面接收
//        $params['example'] = I('example');

        $admininfo= $this->getMerchant($params['key_admin']);
        $admindefault = $this->GetOneAmindefault($admininfo['pre_table'], $params['key_admin'], 'erpclassname');
        if ($admindefault == false) {
            returnjson(array('code'=>113, 'data'=>['y'=>'erp']),$this->returnstyle,$this->callback);
        }

        $data = RebateService::rebate($admininfo, $admindefault, $params, 'scan');
        returnjson($data,$this->returnstyle,$this->callback);
    }

    /**
     * 填写小票信息
     */
    public function writereceipt()
    {
        $params['key_admin'] = I('key_admin');
        $params['terminalnumber'] = I('terminalnumber');//收银机号
        $params['billserialnumber'] = I('billserialnumber');//小票流水号
        $params['paidamount'] = I('paidamount');//消费金额，字段名字为实收金额，具体erp可具体对待erp的字段
        $params['openid'] = I('openid');
        if (in_array('', $params)) {//基础信息必有
            returnjson(array('code'=>1030),$this->returnstyle,$this->callback);
        }
        $admininfo= $this->getMerchant($params['key_admin']);
        $admindefault = $this->GetOneAmindefault($admininfo['pre_table'], $params['key_admin'], 'erpclassname');
        if ($admindefault == false) {
            returnjson(array('code'=>113, 'data'=>['y'=>'erp']),$this->returnstyle,$this->callback);
        }

        $data = RebateService::rebate($admininfo, $admindefault, $params, 'write');
        returnjson($data,$this->returnstyle,$this->callback);
    }




    /**
     * 扫码返利历史记录
     */
    public function receipthistorylist()
    {
        $params['key_admin'] = I('key_admin');
        $params['openid'] = I('openid');

        if (in_array('', $params)) {
            returnjson(array('code'=>1030),$this->returnstyle,$this->callback);
        }

        $params['pagenum'] = I('pagenum');
        $params['line'] = I('line');
        $adminInfo = $this->getMerchant($params['key_admin']);
        $data = RebateService::getRepeatHistory($adminInfo, $params, $params['pagenum'], $params['line']);
        returnjson($data,$this->returnstyle,$this->callback);

    }


    /**
     * 券抽奖
     */
    public function receiptprize()
    {
        $params['key_admin'] = I('key_admin');
        $params['id'] = I('id');
        $params['openid'] = I('openid');
        $params['billserialnumber'] = I('billserialnumber');
        $adminInfo = $this->getMerchant($params['key_admin']);
        $data = RebateService::receiptPrize($adminInfo, $params['id'], $params['billserialnumber'], $params['openid']);
        returnjson($data,$this->returnstyle,$this->callback);
    }


    /**
     * 小票返利公共配置：规则，抽奖图标，或许以后还会有
     */
    public function getpublicsettings()
    {
        $params['key_admin'] = I('key_admin');
        if (in_array('', $params, true)){
            returnjson(['code'=>1030, 'data'=>['y'=>'app']],$this->returnstyle,$this->callback);
        }

        $adminInfo = $this->getMerchant($params['key_admin']);
        $data = RebateService::getReceiptPublicSettings($adminInfo);
        returnjson($data,$this->returnstyle,$this->callback);
    }
}