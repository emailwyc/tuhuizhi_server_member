<?php
/**
 * Created by PhpStorm.
 * User: zhang
 * Date: 26/10/2017
 * Time: 10:53
 */

namespace PublicApi\Controller;


use Common\Controller\CommonController;
use PublicApi\Service\OutSourceService;
use PublicApi\Service\TagService;
use PublicApi\Service\ThemeGroupService;

class TagThemGroupController extends CommonController
{
    protected $params;
    protected $adminInfo;
    public function _initialize()
    {
        parent::__initialize(); // TODO: Change the autogenerated stub
        // ##获取接口参数，并转成array
        $params = file_get_contents('php://input');
        $params = json_decode($params, true);
        if (!is_array($params)) {
            returnjson(['code'=>1051, 'data'=>1],$this->returnstyle,$this->callback);
        }

        //获取key_admin信息，如果值为空会返回key_admin未定义或无效
        $adminInfo = $this->getMerchant($params['key_admin']);

        //验证签名是否正确
        $check = OutSourceService::verifySign($params, $adminInfo);
        if ($check['code'] !== 200) {
            returnjson($check,$this->returnstyle,$this->callback);
        }

        //如果验证通过，将基本信息赋值，下面的逻辑操作中，都从这里面取值
        $this->params = $params;
        $this->adminInfo = $adminInfo;
    }

    /**
     * 获取所有标签，此接口只需要一个key_admin参数，其已经在_initialize方法中验证
     */
    public function tags()
    {
        $menuid = $this->params['menuid'] ? $this->params['menuid'] : false;
        $name = $this->params['name'] ? $this->params['name'] : false;
        $data = TagService::tagList($this->adminInfo, false, $name, $menuid);
        returnjson($data,$this->returnstyle,$this->callback);
    }

    /**
     * 获取所有主题，此接口只需要一个key_admin参数，其已经在_initialize方法中验证
     */
    public function thems()
    {
        $data = ThemeGroupService::ThemeList($this->adminInfo);
        returnjson($data,$this->returnstyle,$this->callback);
    }

    /**
     * 获取所有分组，此接口只需要一个key_admin参数，其已经在_initialize方法中验证
     */
    public function groups()
    {
        $data = ThemeGroupService::GroupList($this->adminInfo);
        returnjson($data,$this->returnstyle,$this->callback);
    }




}